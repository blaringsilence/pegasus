#!/usr/bin/env python3
from ipaddress import ip_address
from http.server import BaseHTTPRequestHandler
import os
import argparse
import socketserver
import sys

class serverHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        path = os.path.join(os.curdir, self.path)
        try:
            if path.endswith('/'):
                f_path = path[1:] + 'index.html'
            else:
                f_path = path[1:]
            with open(f_path) as f:
                self.send_response(200)
                self.send_header('Content type', 'text/html')
                self.end_headers()
                self.wfile.write(f.read().encode('utf-8'))
        except IOError:
            if path == '/moved': # If /moved is present it will open, otherwise it will redirect to /here
                self.send_response(301)
                self.send_header('Location', 'here')
                self.end_headers()
            else:
                self.send_error(404, 'File not found')

def main():
    try:  
        parser = argparse.ArgumentParser()
        parser.add_argument('-ip', help='IP address where the server will run', type=ip_address, default='127.0.0.1', metavar='IP ADDRESS')
        parser.add_argument('--port', help='port number for the server', type=int, choices=range(0,65535), default=8080, metavar='PORT NUMBER')
        args = parser.parse_args()
        ip = str(args.ip)
        httpd = socketserver.TCPServer((ip, args.port), serverHandler)
        print("Server's running at", args.ip, args.port)
        httpd.serve_forever()
    except KeyboardInterrupt:
        print("\nShutting down server..")
    sys.exit(0)

if __name__ == "__main__":
    main()